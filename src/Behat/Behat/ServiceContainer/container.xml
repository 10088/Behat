<?xml version="1.0" ?>
<container xmlns="http://www.symfony-project.org/schema/dic/services">
    <parameters>
        <!-- Features -->
        <parameter key="behat.work.path"></parameter>
        <parameter key="behat.lib.path"></parameter>
        <parameter key="gherkin.lib.path"></parameter>

        <parameter key="behat.features.path">features</parameter>
        <parameter key="behat.features.load_path">%behat.features.path%</parameter>
        <parameter key="behat.features.base_path">%behat.features.path%/../</parameter>
        <parameter key="behat.support.path">%behat.features.path%/support</parameter>
        <parameter key="behat.steps.path">%behat.features.path%/steps</parameter>
        <parameter key="behat.hooks.file">%behat.support.path%/hooks.php</parameter>
        <parameter key="behat.environment.file" type="collection">
            <parameter>%behat.support.path%/env.php</parameter>
        </parameter>

        <!-- Step Definition -->
        <parameter key="behat.definitions_container.class">Behat\Behat\StepDefinition\DefinitionsContainer</parameter>
        <parameter key="behat.definitions_loader.php.class">Behat\Behat\StepDefinition\Loader\PHPLoader</parameter>

        <!-- Event Dispatcher -->
        <parameter key="behat.event_dispatcher.class">Behat\Behat\EventDispatcher\EventDispatcher</parameter>

        <!-- Collector -->
        <parameter key="behat.statistics_collector.class">Behat\Behat\Collector\StatisticsCollector</parameter>

        <!-- Hooks -->
        <parameter key="behat.hooks_container.class">Behat\Behat\Hooks\HooksContainer</parameter>
        <parameter key="behat.hooks_loader.php.class">Behat\Behat\Hooks\Loader\PHPLoader</parameter>

        <!-- Output Manager -->
        <parameter key="behat.output.path"></parameter>
        <parameter key="behat.formatter.name">pretty</parameter>
        <parameter key="behat.formatter.colors">true</parameter>
        <parameter key="behat.formatter.timer">true</parameter>
        <parameter key="behat.formatter.verbose">false</parameter>
        <parameter key="behat.formatter.locale">en</parameter>

        <parameter key="behat.output_manager.class">Behat\Behat\Output\OutputManager</parameter>
        <parameter key="behat.formatter.progress.class">Behat\Behat\Output\Formatter\ProgressFormatter</parameter>
        <parameter key="behat.formatter.pretty.class">Behat\Behat\Output\Formatter\PrettyFormatter</parameter>
        <parameter key="behat.formatter.html.class">Behat\Behat\Output\Formatter\HTMLFormatter</parameter>
        <parameter key="behat.formatter.junit.class">Behat\Behat\Output\Formatter\JUnitFormatter</parameter>

        <!-- Environment -->
        <parameter key="behat.environment.class">Behat\Behat\Environment\WorldEnvironment</parameter>
        <parameter key="behat.environment_builder.class">Behat\Behat\Environment\EnvironmentBuilder</parameter>

        <!-- Tester -->
        <parameter key="behat.feature_tester.class">Behat\Behat\Tester\FeatureTester</parameter>
        <parameter key="behat.background_tester.class">Behat\Behat\Tester\BackgroundTester</parameter>
        <parameter key="behat.scenario_tester.class">Behat\Behat\Tester\ScenarioTester</parameter>
        <parameter key="behat.outline_tester.class">Behat\Behat\Tester\OutlineTester</parameter>
        <parameter key="behat.step_tester.class">Behat\Behat\Tester\StepTester</parameter>

        <!-- Translator -->
        <parameter key="behat.i18n.path">%behat.lib.path%/i18n</parameter>
        <parameter key="behat.translator.class">Symfony\Component\Translation\Translator</parameter>
        <parameter key="behat.translator.message_selector.class">Symfony\Component\Translation\MessageSelector</parameter>
        <parameter key="behat.translator.xliff_loader.class">Symfony\Component\Translation\Loader\XliffFileLoader</parameter>

        <!-- Gherkin Manager -->
        <parameter key="gherkin.filter.name"></parameter>
        <parameter key="gherkin.filter.tags"></parameter>
        <parameter key="gherkin.class">Behat\Gherkin\Gherkin</parameter>
        <parameter key="gherkin.parser.class">Behat\Gherkin\Parser</parameter>
        <parameter key="gherkin.lexer.class">Behat\Gherkin\Lexer</parameter>
        <parameter key="gherkin.loader.directory.class">Behat\Gherkin\Loader\DirectoryLoader</parameter>
        <parameter key="gherkin.loader.gherkin.class">Behat\Gherkin\Loader\GherkinFileLoader</parameter>
        <parameter key="gherkin.keywords.class">Behat\Gherkin\Keywords\SymfonyTranslationKeywords</parameter>
        <parameter key="gherkin.keywords.path">%gherkin.lib.path%/i18n</parameter>

    </parameters>
    <services>
        <!-- Gherkin Manager -->
        <service id="gherkin" class="%gherkin.class%">
            <call method="addLoader">
                <argument type="service">
                    <service class="%gherkin.loader.directory.class%">
                        <argument type="service" id="gherkin" />
                    </service>
                </argument>
            </call>
            <call method="addLoader">
                <argument type="service">
                    <service class="%gherkin.loader.gherkin.class%">
                        <argument type="service" id="gherkin.parser" />
                    </service>
                </argument>
            </call>
            <call method="setBasePath">
                <argument>%behat.features.base_path%</argument>
            </call>
        </service>
        <service id="gherkin.parser" class="%gherkin.parser.class%">
            <argument type="service">
                <service class="%gherkin.lexer.class%">
                    <argument type="service" id="gherkin.keywords" />
                </service>
            </argument>
        </service>
        <service id="gherkin.keywords" class="%gherkin.keywords.class%">
            <argument type="service" id="behat.translator" />
            <call method="setXliffLoaderFormatName">
                <argument>xliff</argument>
            </call>
            <call method="setXliffTranslationsPath">
                <argument>%gherkin.keywords.path%</argument>
            </call>
        </service>

        <!-- Translator -->
        <service id="behat.translator" class="%behat.translator.class%">
            <argument>en</argument>
            <argument type="service">
                <service class="%behat.translator.message_selector.class%" />
            </argument>
            <call method="addLoader">
                <argument>xliff</argument>
                <argument type="service">
                    <service class="%behat.translator.xliff_loader.class%" />
                </argument>
            </call>
        </service>

        <!-- Step Definition -->
        <service id="behat.definitions_container" class="%behat.definitions_container.class%">
            <argument type="service" id="behat.event_dispatcher" />
            <call method="addLoader">
                <argument>php</argument>
                <argument type="service">
                    <service class="%behat.definitions_loader.php.class%">
                        <argument type="service" id="behat.event_dispatcher" />
                    </service>
                </argument>
            </call>
        </service>

        <!-- Hooks -->
        <service id="behat.hooks_container" class="%behat.hooks_container.class%">
            <call method="addLoader">
                <argument>php</argument>
                <argument type="service">
                    <service class="%behat.hooks_loader.php.class%" />
                </argument>
            </call>
            <tag name="behat.events_listener" />
        </service>

        <!-- Event Dispatcher -->
        <service id="behat.event_dispatcher" class="%behat.event_dispatcher.class%">
            <call method="bindEventListeners">
                <argument type="service" id="service_container" />
            </call>
        </service>

        <!-- Collector -->
        <service id="behat.statistics_collector" class="%behat.statistics_collector.class%">
            <argument type="service" id="service_container" />
            <tag name="behat.events_listener" />
        </service>

        <!-- Output Manager -->
        <service id="behat.output_manager" class="%behat.output_manager.class%">
            <argument type="service" id="service_container" />
            <call method="setSupportPath">
                <argument>%behat.support.path%</argument>
            </call>
            <call method="setOutputPath">
                <argument>%behat.output.path%</argument>
            </call>
            <call method="showColors">
                <argument>%behat.formatter.colors%</argument>
            </call>
            <call method="showTimer">
                <argument>%behat.formatter.timer%</argument>
            </call>
            <call method="beVerbose">
                <argument>%behat.formatter.verbose%</argument>
            </call>
            <call method="setLocale">
                <argument>%behat.formatter.locale%</argument>
            </call>
            <call method="addFormatter">
                <argument>progress</argument>
                <argument type="service">
                    <service class="%behat.formatter.progress.class%" />
                </argument>
            </call>
            <call method="addFormatter">
                <argument>pretty</argument>
                <argument type="service">
                    <service class="%behat.formatter.pretty.class%" />
                </argument>
            </call>
            <call method="addFormatter">
                <argument>html</argument>
                <argument type="service">
                    <service class="%behat.formatter.html.class%" />
                </argument>
            </call>
            <call method="addFormatter">
                <argument>junit</argument>
                <argument type="service">
                    <service class="%behat.formatter.junit.class%" />
                </argument>
            </call>
            <call method="setFormatter">
                <argument>%behat.formatter.name%</argument>
            </call>
            <tag name="behat.events_listener" />
        </service>

        <!-- Environment -->
        <service id="behat.environment" class="%behat.environment.class%" scope="prototype" />
        <service id="behat.environment_builder" class="%behat.environment_builder.class%">
            <argument type="service" id="service_container" />
            <argument>%behat.environment.file%</argument>
        </service>

        <!-- Tester -->
        <service id="behat.feature_tester" class="%behat.feature_tester.class%" scope="prototype">
            <argument type="service" id="service_container" />
        </service>
        <service id="behat.background_tester" class="%behat.background_tester.class%" scope="prototype">
            <argument type="service" id="service_container" />
        </service>
        <service id="behat.scenario_tester" class="%behat.scenario_tester.class%" scope="prototype">
            <argument type="service" id="service_container" />
        </service>
        <service id="behat.outline_tester" class="%behat.outline_tester.class%" scope="prototype">
            <argument type="service" id="service_container" />
        </service>
        <service id="behat.step_tester" class="%behat.step_tester.class%" scope="prototype">
            <argument type="service" id="service_container" />
        </service>
    </services>
</container>
